apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

// Definition of dependency versions
ext {
    solrVersion = '4.4.0'
    slf4jVersion = '1.7.10'
    log4jtoslf4jVersion = '2.1'
    commonsloggingVersion = '1.1.1'

	apacheSparkScalaVersion = '2.10'
	apacheSparkVersion = '1.4.0'

    guavaVersion = '18.0'
    junitVersion = '4.11'
    assertjVersion = '1.7.1'
}

version = '0.1'

idea {
    project {
        languageLevel = '1.7'
    }
}

allprojects {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.1'
    }
}

repositories {
    mavenCentral()
}

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
}

dependencies {
    provided("org.apache.spark:spark-core_$apacheSparkScalaVersion:$apacheSparkVersion")
    provided("org.apache.spark:spark-mllib_$apacheSparkScalaVersion:$apacheSparkVersion")

    provided("org.slf4j:slf4j-api:$slf4jVersion")
    provided("org.slf4j:slf4j-simple:$slf4jVersion")
    provided("org.apache.logging.log4j:log4j-to-slf4j:$log4jtoslf4jVersion")

    compile("org.apache.lucene:lucene-analyzers-common:$solrVersion") {
        exclude(group: "log4j", module: "log4j")
    }
    compile("org.apache.lucene:lucene-core:$solrVersion") {
        exclude(group: "log4j", module: "log4j")
    }
    compile("com.google.guava:guava:$guavaVersion")

    testCompile("commons-logging:commons-logging:$commonsloggingVersion")
    testCompile("junit:junit:$junitVersion")
    testCompile("org.assertj:assertj-core:$assertjVersion")
}

shadowJar {
    zip64 true
    dependencies {
        exclude(dependency("org.apache.spark:spark-core_$apacheSparkScalaVersion:$apacheSparkVersion"))
        exclude(dependency("org.apache.spark:spark-mllib_$apacheSparkScalaVersion:$apacheSparkVersion"))
    }
}
// Fix test classpath issues in IDEA
task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources
